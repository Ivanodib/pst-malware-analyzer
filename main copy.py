import win32com.client
import os
import analyze_hash
import hash_helper
import mmap

save_folder = r"C:\Dev\Pst Analyzer\attachments"
hash_db_path = r"hash_db.md5"

hash_db = open(hash_db_path,'r') 
data   = mmap.mmap(hash_db.fileno(), 0, access=mmap.ACCESS_READ) #carico il db in memoria 1 volta

def find_pst_folder(OutlookObj, pst_filepath) :
    for Store in OutlookObj.Stores :
        if Store.IsDataFileStore and Store.FilePath == pst_filepath :
            return Store.GetRootFolder()
    return None

def enumerate_folders(FolderObj) :
    for ChildFolder in FolderObj.Folders :
        enumerate_folders(ChildFolder)    
    iterate_messages(FolderObj)

def parse_email(email):
    try:
        print("\n*************** Analizzando email ************************")
                #print(FolderObj)
                #print(str(item.SenderName).encode('utf-8'))
        #print(str(email.SenderEmailAddress).encode('utf-8'))
        #print(str(email.SentOn).encode('utf-8'))
                #print(item.To) #crasha su mailing list
                #print(item.CC)
                #print(item.BCC)
        print(str(email.Subject).encode('utf-8'))
            

        count_attachments = email.Attachments.Count
        if count_attachments > 0 :

#sostituire con MT

            for att in range(count_attachments) :
                allegato = email.Attachments.Item(att + 1).Filename

                if "pdf" in allegato or "xlsx" in allegato or "xls" in allegato or \
                "doc" in allegato or "docx" in allegato or "zip" in allegato:
                
                    print(allegato)
                    email.Attachments.Item(att + 1).SaveASFile(os.path.join(save_folder, allegato)) #salvo allegato
                    '''
                    hash = hash_helper.calc_md5(os.path.join(save_folder, allegato)) #calcolo hash
                    print("controllo hash")
                    risultato = analyze_hash.find_md5(hash, data) #controllo malware
                    if risultato != -1: # MALWARE !
                        print("Malware found!"+ str(risultato))
                    else:
                        print("Clean attachment"+ str(risultato))
                    '''    
                else:
                    continue
    except Exception as e:
        print(e)

#_threadpool = Pool(8)
def iterate_messages(FolderObj) :
    for item in FolderObj.Items :
        parse_email(item)


Outlook = win32com.client.Dispatch("Outlook.Application").GetNamespace("MAPI")
pst = r"C:\Dev\Pst Analyzer\ivano.dibenedetto.pst"
Outlook.AddStore(pst)
PSTFolderObj = find_pst_folder(Outlook,pst)
try :
    enumerate_folders(PSTFolderObj)
except Exception as exc :
    print(exc)
